"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8370],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>f});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),i=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=i(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=i(a),k=n,f=u["".concat(c,".").concat(k)]||u[k]||p[k]||o;return a?r.createElement(f,l(l({ref:t},d),{},{components:a})):r.createElement(f,l({ref:t},d))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=k;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:n,l[1]=s;for(var i=2;i<o;i++)l[i]=a[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}k.displayName="MDXCreateElement"},3490:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var r=a(3117),n=(a(7294),a(3905));const o={},l="LidoLocator",s={unversionedId:"contracts/lido-locator",id:"contracts/lido-locator",title:"LidoLocator",description:"- Source code",source:"@site/docs/contracts/lido-locator.md",sourceDirName:"contracts",slug:"/contracts/lido-locator",permalink:"/contracts/lido-locator",draft:!1,editUrl:"https://github.com/lidofinance/docs/blob/main/docs/contracts/lido-locator.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"stETH on AAVE caveats",permalink:"/token-guides/steth-on-aave-caveats"},next:{title:"Lido",permalink:"/contracts/lido"}},c={},i=[{value:"Upgradability",id:"upgradability",level:2},{value:"Methods",id:"methods",level:2},{value:"accountingOracle()",id:"accountingoracle",level:3},{value:"depositSecurityModule()",id:"depositsecuritymodule",level:3},{value:"elRewardsVault()",id:"elrewardsvault",level:3},{value:"legacyOracle()",id:"legacyoracle",level:3},{value:"lido()",id:"lido",level:3},{value:"oracleReportSanityChecker()",id:"oraclereportsanitychecker",level:3},{value:"burner()",id:"burner",level:3},{value:"stakingRouter()",id:"stakingrouter",level:3},{value:"treasury()",id:"treasury",level:3},{value:"validatorsExitBusOracle()",id:"validatorsexitbusoracle",level:3},{value:"withdrawalQueue()",id:"withdrawalqueue",level:3},{value:"withdrawalVault()",id:"withdrawalvault",level:3},{value:"postTokenRebaseReceiver()",id:"posttokenrebasereceiver",level:3},{value:"oracleDaemonConfig()",id:"oracledaemonconfig",level:3},{value:"coreComponents()",id:"corecomponents",level:3},{value:"oracleReportComponentsForLido()",id:"oraclereportcomponentsforlido",level:3}],d={toc:i},u="wrapper";function p(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"lidolocator"},"LidoLocator"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/lidofinance/lido-dao/blob/master/contracts/0.8.9/LidoLocator.sol"},"Source code")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://etherscan.io/address/0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb"},"Deployed contract"))),(0,n.kt)("p",null,"LidoLocator is the universal address book for the Lido protocol.\nIt follows the well-known ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Service_locator_pattern"},"service locator")," pattern."),(0,n.kt)("h2",{id:"upgradability"},"Upgradability"),(0,n.kt)("p",null,"The contract uses ",(0,n.kt)("a",{parentName:"p",href:"/contracts/ossifiable-proxy"},"OssifiableProxy")," for upgradability and\ndoes not use storage for the address book. Instead, all addresses are embedded into\nthe implementation's bytecode as immutables for gas efficiency, allowing one to\nupdate them along with a proxy implementation."),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"accountingoracle"},"accountingOracle()"),(0,n.kt)("p",null,"Returns an address of the ",(0,n.kt)("a",{parentName:"p",href:"/contracts/accounting-oracle"},"AccountingOracle contract")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sol"},"function accountingOracle() view returns(address);\n")),(0,n.kt)("h3",{id:"depositsecuritymodule"},"depositSecurityModule()"),(0,n.kt)("p",null,"Returns an address of the ",(0,n.kt)("a",{parentName:"p",href:"/contracts/deposit-security-module"},"DepositSecurityModule contract")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sol"},"function depositSecurityModule() view returns(address)\n")),(0,n.kt)("h3",{id:"elrewardsvault"},"elRewardsVault()"),(0,n.kt)("p",null,"Returns an address of the ",(0,n.kt)("a",{parentName:"p",href:"/contracts/lido-execution-layer-rewards-vault"},"LidoExecutionLayerRewardsVault contract")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sol"},"function elRewardsVault() view returns(address)\n")),(0,n.kt)("h3",{id:"legacyoracle"},"legacyOracle()"),(0,n.kt)("p",null,"Returns an address of the ",(0,n.kt)("a",{parentName:"p",href:"/contracts/legacy-oracle"},"LegacyOracle contract")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sol"},"function legacyOracle() external view returns(address)\n")),(0,n.kt)("h3",{id:"lido"},"lido()"),(0,n.kt)("p",null,"Returns an address of the ",(0,n.kt)("a",{parentName:"p",href:"/contracts/lido"},"Lido contract")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sol"},"function lido() external view returns(address)\n")),(0,n.kt)("h3",{id:"oraclereportsanitychecker"},"oracleReportSanityChecker()"),(0,n.kt)("p",null,"Returns an address of the ",(0,n.kt)("a",{parentName:"p",href:"/contracts/oracle-report-sanity-checker"},"OracleReportSanityChecker contract")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sol"},"function oracleReportSanityChecker() view returns(address)\n")),(0,n.kt)("h3",{id:"burner"},"burner()"),(0,n.kt)("p",null,"Returns an address of the ",(0,n.kt)("a",{parentName:"p",href:"/contracts/burner"},"Burner contract")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sol"},"function burner() view returns(address)\n")),(0,n.kt)("h3",{id:"stakingrouter"},"stakingRouter()"),(0,n.kt)("p",null,"Returns an address of the ",(0,n.kt)("a",{parentName:"p",href:"/contracts/staking-router"},"StakingRouter contract")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sol"},"function stakingRouter() view returns(address)\n")),(0,n.kt)("h3",{id:"treasury"},"treasury()"),(0,n.kt)("p",null,"Returns an address of the treasury"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sol"},"function treasury() view returns(address)\n")),(0,n.kt)("h3",{id:"validatorsexitbusoracle"},"validatorsExitBusOracle()"),(0,n.kt)("p",null,"Returns an address of the ",(0,n.kt)("a",{parentName:"p",href:"/contracts/validators-exit-bus-oracle"},"ValidatorsExitBusOracle contract")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sol"},"function validatorsExitBusOracle() external view returns(address)\n")),(0,n.kt)("h3",{id:"withdrawalqueue"},"withdrawalQueue()"),(0,n.kt)("p",null,"Returns an address of the ",(0,n.kt)("a",{parentName:"p",href:"/contracts/withdrawal-queue-erc721"},"WithdrawalQueueERC721 contract")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sol"},"function withdrawalQueue() view returns(address)\n")),(0,n.kt)("h3",{id:"withdrawalvault"},"withdrawalVault()"),(0,n.kt)("p",null,"Returns an address of the ",(0,n.kt)("a",{parentName:"p",href:"/contracts/withdrawal-vault"},"WithdrawalVault contract")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sol"},"function withdrawalVault() view returns(address)\n")),(0,n.kt)("h3",{id:"posttokenrebasereceiver"},"postTokenRebaseReceiver()"),(0,n.kt)("p",null,"Returns an address of the contract following the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/lidofinance/lido-dao/blob/cadffa46a2b8ed6cfa1127fca2468bae1a82d6bf/contracts/0.4.24/Lido.sol#L20-L30"},(0,n.kt)("inlineCode",{parentName:"a"},"IPostTokenRebaseReceiver"))," interface described inside ",(0,n.kt)("inlineCode",{parentName:"p"},"Lido"),".\nRight now it returns the ",(0,n.kt)("a",{parentName:"p",href:"/contracts/legacy-oracle"},"LegacyOracle")," address."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sol"},"function postTokenRebaseReceiver() view returns(address);\n")),(0,n.kt)("h3",{id:"oracledaemonconfig"},"oracleDaemonConfig()"),(0,n.kt)("p",null,"Returns an address of the ",(0,n.kt)("a",{parentName:"p",href:"/contracts/oracle-daemon-config"},"OracleDaemonConfig contract")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sol"},"function oracleDaemonConfig() view returns(address)\n")),(0,n.kt)("h3",{id:"corecomponents"},"coreComponents()"),(0,n.kt)("p",null,"Returns a batch of core components addresses at once."),(0,n.kt)("p",null,"It's just a more gas-efficient way of calling several public getters at once."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sol"},"function coreComponents() view returns(\n    address elRewardsVault,\n    address oracleReportSanityChecker,\n    address stakingRouter,\n    address treasury,\n    address withdrawalQueue,\n    address withdrawalVault\n)\n")),(0,n.kt)("h3",{id:"oraclereportcomponentsforlido"},"oracleReportComponentsForLido()"),(0,n.kt)("p",null,"Returns a batch of addresses that is used specifically during oracle report\nhandling in the Lido contract."),(0,n.kt)("p",null,"It's just a more gas-efficient way of calling several public getters at once."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sol"},"function oracleReportComponentsForLido() view returns(\n    address accountingOracle,\n    address elRewardsVault,\n    address oracleReportSanityChecker,\n    address burner,\n    address withdrawalQueue,\n    address withdrawalVault,\n    address postTokenRebaseReceiver\n)\n")))}p.isMDXComponent=!0}}]);