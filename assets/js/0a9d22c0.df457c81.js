"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[859],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1841:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],s={},l="SelfOwnedStETHBurner",c={unversionedId:"contracts/self-owned-steth-burner",id:"contracts/self-owned-steth-burner",title:"SelfOwnedStETHBurner",description:"- Source Code",source:"@site/docs/contracts/self-owned-steth-burner.md",sourceDirName:"contracts",slug:"/contracts/self-owned-steth-burner",permalink:"/contracts/self-owned-steth-burner",editUrl:"https://github.com/lidofinance/docs/blob/main/docs/contracts/self-owned-steth-burner.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"DepositSecurityModule",permalink:"/contracts/deposit-security-module"},next:{title:"CompositePostRebaseBeaconReceiver",permalink:"/contracts/composite-post-rebase-beacon-receiver"}},u=[{value:"Cover application workflow",id:"cover-application-workflow",children:[],level:2},{value:"Shares burnt counters",id:"shares-burnt-counters",children:[],level:2},{value:"View methods",id:"view-methods",children:[{value:"Function: getCoverSharesBurnt",id:"function-getcoversharesburnt",children:[],level:3},{value:"Function: getNonCoverSharesBurnt",id:"function-getnoncoversharesburnt",children:[],level:3},{value:"Function: getBurnAmountPerRunQuota",id:"function-getburnamountperrunquota",children:[],level:3},{value:"function getExcessStETH",id:"function-getexcesssteth",children:[],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"Function: requestBurnMyStETHForCover",id:"function-requestburnmystethforcover",children:[{value:"Parameters:",id:"parameters",children:[],level:4}],level:3},{value:"Function: requestBurnMyStETH",id:"function-requestburnmysteth",children:[{value:"Parameters:",id:"parameters-1",children:[],level:4}],level:3},{value:"Function: setBurnAmountPerRunQuota",id:"function-setburnamountperrunquota",children:[{value:"Parameters:",id:"parameters-2",children:[],level:4}],level:3},{value:"Function: processLidoOracleReport",id:"function-processlidooraclereport",children:[],level:3},{value:"function recoverExcessStETH",id:"function-recoverexcesssteth",children:[],level:3},{value:"Function: recoverERC20",id:"function-recovererc20",children:[{value:"Parameters:",id:"parameters-3",children:[],level:4}],level:3},{value:"Function: recoverERC721",id:"function-recovererc721",children:[],level:3}],level:2}],d={toc:u};function p(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"selfownedstethburner"},"SelfOwnedStETHBurner"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/lidofinance/lido-dao/blob/develop/contracts/0.8.9/SelfOwnedStETHBurner.sol"},"Source Code")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://etherscan.io/address/0xB280E33812c0B09353180e92e27b8AD399B07f26"},"Deployed Contract"))),(0,o.kt)("p",null,"The contract provides a way for Lido governance to burn stETH token shares as a means to cover losses in staking."),(0,o.kt)("p",null,"It relies on the ",(0,o.kt)("a",{parentName:"p",href:"/contracts/lido#rebasing"},"rebasing")," nature of stETH. The ",(0,o.kt)("inlineCode",{parentName:"p"},"Lido")," contract calculates user balance using the following equation,\n",(0,o.kt)("inlineCode",{parentName:"p"},"balanceOf(account) = shares[account] * totalPooledEther / totalShares"),".\nTherefore, burning shares (e.g. decreasing the ",(0,o.kt)("inlineCode",{parentName:"p"},"totalShares")," amount) increases stETH holders' balances."),(0,o.kt)("p",null,"The contract doesn\u2019t implement any auto-cover mechanism. There are no presumptions and prerequisites for\nwhen and how exactly loss compensation happens. ",(0,o.kt)("inlineCode",{parentName:"p"},"SelfOwnedStETHBurner")," provides a safe and deterministic way\nto incur a positive stETH token rebase by gradually decreasing ",(0,o.kt)("inlineCode",{parentName:"p"},"totalShares")," that can be correctly handled\nby 3rd party protocols (e.g. Anchor Protocol) integrated with stETH."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"SelfOwnedStETHBurner")," accepts burning requests by locking caller-provided stETH tokens. Those burn requests\nare initially set by the contract to a pending state. Actual burning happens as part of an oracle (LidoOracle)\nbeacon report to prevent additional fluctuations of the existing stETH token rebase period (~24h)."),(0,o.kt)("p",null,"We also distinguish two types of shares burn requests:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"request to ",(0,o.kt)("strong",{parentName:"li"},"cover")," a slashing event (e.g. decreasing of the total pooled ETH amount\nbetween the two consecutive oracle reports);"),(0,o.kt)("li",{parentName:"ul"},"request to burn shares for any other cases (",(0,o.kt)("strong",{parentName:"li"},"non-cover"),").")),(0,o.kt)("p",null,"The contract has two separate counters for the burnt shares: cover and non-cover ones. The contract has\nexclusive access to the stETH shares burning via constrained ",(0,o.kt)("a",{parentName:"p",href:"/token-guides/steth-superuser-functions#superuser-roles"},(0,o.kt)("inlineCode",{parentName:"a"},"BURN_ROLE")),":\nburning allowed only from the contract's own balance only."),(0,o.kt)("p",null,"To prevent overly large rebasing events entailing unfair coverage distribution via front-running techniques,\nthe contract has a limit on burnable shares per single beacon report. Thus, burning requests\ncan be executed in more than one pass."),(0,o.kt)("p",null,"The full formal spec is provided with\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/lidofinance/lido-improvement-proposals/blob/develop/LIPS/lip-6.md"},"LIP-6"),"."),(0,o.kt)("h2",{id:"cover-application-workflow"},"Cover application workflow"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"The contract accepts burn requests only from the ",(0,o.kt)("inlineCode",{parentName:"li"},"Aragon Voting")," contract by transferring stETH."),(0,o.kt)("li",{parentName:"ol"},"The transfer is performed by ",(0,o.kt)("inlineCode",{parentName:"li"},"requestBurnMyStETHForCover")," func call which requires explicit ",(0,o.kt)("inlineCode",{parentName:"li"},"approve")," beforehand."),(0,o.kt)("li",{parentName:"ol"},"Cover application is performed as a part of oracle reports and rate-limited to prevent sandwiching.")),(0,o.kt)("p",null,"NB: daily burn quota is set to 4BP of TVL, consider to tune it if needed (overall token rebase should stay less than 7.5BP)."),(0,o.kt)("h2",{id:"shares-burnt-counters"},"Shares burnt counters"),(0,o.kt)("p",null,"The contract keeps count of all shares ever burned by way of maintaining two internal counters: ",(0,o.kt)("inlineCode",{parentName:"p"},"totalCoverSharesBurnt")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"totalNonCoverSharesBurnt")," for cover and non-cover burns respectively. These counters are increased when actual stETH burn is performed as part of the Lido Oracle report."),(0,o.kt)("p",null,"This makes it possible to split any stETH rebase into two sub-components: the rewards-induced rebase\nand cover application-induced rebase, which can be done as follows:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Before the rebase, store the previous values of both counters, as well as the value of stETH share price:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sol"},"prevCoverSharesBurnt = SelfOwnedStETHBurner.totalCoverSharesBurnt()\nprevSharePrice = stETH.totalSupply() / stETH.getTotalShares()\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"After the rebase, perform the following calculations:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sol"},"sharesBurntFromOldToNew = SelfOwnedStETHBurner.totalCoverSharesBurnt() - prevCoverSharesBurnt;\nnewSharePriceAfterCov = stETH.totalSupply() / (stETH.getTotalShares() + sharesBurntFromOldToNew);\nnewSharePrice = stETH.totalSupply() / stETH.getTotalShares();\n\n// rewards-induced share price increase\nrewardPerShare = newSharePriceAfterCov - prevSharePrice;\n\n// cover-induced share price increase\nnonRewardSharePriceIncrease = newSharePrice - prevSharePrice - rewardPerShare;\n")))),(0,o.kt)("p",null,"The Anchor Protocol integration (bETH token) already has the calculations proposed above implemented using a plug-in\nadapter ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/lidofinance/anchor-collateral-steth/blob/feature/lip-6/contracts/InsuranceConnector.vy"},(0,o.kt)("inlineCode",{parentName:"a"},"InsuranceConnector")),"\nfor retrieving the total number of shares burnt for cover purposes.\nSee ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/lidofinance/anchor-collateral-steth/blob/e0e23e63ad24d44c2ffc0799cc701dbe71a578ed/contracts/AnchorVault.vy#L442"},(0,o.kt)("inlineCode",{parentName:"a"},"AnchorVault.collect_rewards#442")),"\nfor the possible sketch of usage with similar integrations."),(0,o.kt)("h2",{id:"view-methods"},"View methods"),(0,o.kt)("h3",{id:"function-getcoversharesburnt"},"Function: getCoverSharesBurnt"),(0,o.kt)("p",null,"Returns the total cover shares ever burnt."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sol"},"function getCoverSharesBurnt() external view returns (uint256)\n")),(0,o.kt)("h3",{id:"function-getnoncoversharesburnt"},"Function: getNonCoverSharesBurnt"),(0,o.kt)("p",null,"Returns the total non-cover shares ever burnt."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sol"},"function getNonCoverSharesBurnt() external view returns (uint256)\n")),(0,o.kt)("h3",{id:"function-getburnamountperrunquota"},"Function: getBurnAmountPerRunQuota"),(0,o.kt)("p",null,"Returns the maximum amount of shares allowed to burn per single run.\nExpressed in basis points as ratio of shares to burn to the total shares in existence."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"10000 basis points (BP) corresponds to 100%."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sol"},"function getBurnAmountPerRunQuota() external view returns (uint256)\n")),(0,o.kt)("h3",{id:"function-getexcesssteth"},"function getExcessStETH"),(0,o.kt)("p",null,"Returns the stETH amount belonging to the burner contract address but not marked for burning."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sol"},"function getExcessStETH() external view return (uint256)\n")),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("h3",{id:"function-requestburnmystethforcover"},"Function: requestBurnMyStETHForCover"),(0,o.kt)("p",null,"Transfers stETH tokens from the message sender and irreversibly locks these on the burner contract address.\nInternally converts tokens amount into underlying shares amount and marks the converted shares amount\nfor cover-backed burning by increasing the internal ",(0,o.kt)("inlineCode",{parentName:"p"},"coverSharesBurnRequested")," counter."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sol"},"function requestBurnMyStETHForCover(uint256 _stETH2Burn) external\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Reverts if any of the following is true:"),(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"msg.sender")," is not equal to the set upon construction ",(0,o.kt)("inlineCode",{parentName:"li"},"voting")," address;"),(0,o.kt)("li",{parentName:"ul"},"no stETH provided (",(0,o.kt)("inlineCode",{parentName:"li"},"_stETH2Burn == 0"),");"),(0,o.kt)("li",{parentName:"ul"},"no stETH transferred (allowance exceeded).")))),(0,o.kt)("h4",{id:"parameters"},"Parameters:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"_stETH2Burn")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"uint256")),(0,o.kt)("td",{parentName:"tr",align:null},"stETH tokens amount (not shares amount) to burn")))),(0,o.kt)("h3",{id:"function-requestburnmysteth"},"Function: requestBurnMyStETH"),(0,o.kt)("p",null,"Transfers stETH tokens from the message sender and irreversibly locks these on the burner contract address.\nInternally converts tokens amount into underlying shares amount and marks the converted amount for\nnon-cover-backed burning by increasing the internal ",(0,o.kt)("inlineCode",{parentName:"p"},"nonCoverSharesBurnRequested")," counter."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Reverts if any of the following is true:"),(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"msg.sender")," is not equal to the set upon construction ",(0,o.kt)("inlineCode",{parentName:"li"},"voting")," address;"),(0,o.kt)("li",{parentName:"ul"},"no stETH provided (",(0,o.kt)("inlineCode",{parentName:"li"},"_stETH2Burn == 0"),");"),(0,o.kt)("li",{parentName:"ul"},"no stETH transferred (allowance exceeded).")))),(0,o.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"_stETH2Burn")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"uint256")),(0,o.kt)("td",{parentName:"tr",align:null},"stETH tokens amount (not shares amount) to burn")))),(0,o.kt)("h3",{id:"function-setburnamountperrunquota"},"Function: setBurnAmountPerRunQuota"),(0,o.kt)("p",null,"Sets the amount of shares allowed to burn per single run.\nExpressed in basis points as ratio of shares to burn to the total shares in existence."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sol"},"function setBurnAmountPerRunQuota(uint256 _maxBurnAmountPerRunBasisPoints) external\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Reverts if any of the following is true:"),(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"_maxBurnAmountPerRunBasisPoints")," is zero;"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"_maxBurnAmountPerRunBasisPoints")," exceeds ",(0,o.kt)("inlineCode",{parentName:"li"},"10000"),";"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"msg.sender")," is not equal to the set upon construction ",(0,o.kt)("inlineCode",{parentName:"li"},"voting")," address;")))),(0,o.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"_maxBurnAmountPerRunBasisPoints")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"uint256")),(0,o.kt)("td",{parentName:"tr",align:null},"new quota value, BP")))),(0,o.kt)("h3",{id:"function-processlidooraclereport"},"Function: processLidoOracleReport"),(0,o.kt)("p",null,"Enacts cover/non-cover burning requests and logs cover/non-cover shares amount just burnt.\nIncrements public ",(0,o.kt)("inlineCode",{parentName:"p"},"totalCoverSharesBurnt")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"totalNonCoverSharesBurnt")," counters.\nDecrements internal ",(0,o.kt)("inlineCode",{parentName:"p"},"coverSharesBurnRequested")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"nonCoverSharesBurnRequested")," counters."),(0,o.kt)("p",null,"Does nothing if there are no pending burning requests.\nCould be called as part of an oracle quorum report only."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sol"},"function: processLidoOracleReport(uint256, uint256, uint256) external override\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The burning requests could be executed partially per single run due to the ",(0,o.kt)("inlineCode",{parentName:"p"},"maxBurnAmountPerRunBasisPoints")," limit.\nThe cover reasoned burning requests have a higher priority of execution."),(0,o.kt)("p",{parentName:"div"},"Reverts if there are pending burning requests and the ",(0,o.kt)("inlineCode",{parentName:"p"},"msg.sender")," is not of one\nof the ",(0,o.kt)("inlineCode",{parentName:"p"},"LidoOracle")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"LidoOracle.getBeaconReportReceiver()"),"."),(0,o.kt)("p",{parentName:"div"},"Input parameters are needed only for the ABI compatibility, the values are always ignored."),(0,o.kt)("p",{parentName:"div"},"See also:\n",(0,o.kt)("a",{parentName:"p",href:"/contracts/lido-oracle#receiver-function-to-be-invoked-on-report-pushes"},(0,o.kt)("inlineCode",{parentName:"a"},"IBeaconReportReceiver.processLidoOracleReport")),"."))),(0,o.kt)("h3",{id:"function-recoverexcesssteth"},"function recoverExcessStETH"),(0,o.kt)("p",null,"Transfers the excess stETH amount (e.g. belonging to the burner contract address but not marked for burning)\nto the Lido treasury address (the ",(0,o.kt)("inlineCode",{parentName:"p"},"DAO Agent")," contract) set upon the contract construction."),(0,o.kt)("p",null,"Does nothing if the ",(0,o.kt)("inlineCode",{parentName:"p"},"getExcessStETH")," view func returns 0 (zero), e.g. there is no excess stETH\non the contract's balance."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sol"},"function recoverExcessStETH() external\n")),(0,o.kt)("h3",{id:"function-recovererc20"},"Function: recoverERC20"),(0,o.kt)("p",null,"Transfers a given amount of an ERC20-token (defined by the provided contract address) belonging\nto the burner contract address to the Lido treasury (the ",(0,o.kt)("inlineCode",{parentName:"p"},"DAO Agent")," contract) address."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sol"},"function recoverERC20(address _token, uint256 _amount) external\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Reverts if any of the following is true:"),(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"_amount")," value is 0 (zero);"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"_token")," address is 0 (zero);"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"_token")," address is equal to the ",(0,o.kt)("inlineCode",{parentName:"li"},"stETH")," address (use ",(0,o.kt)("inlineCode",{parentName:"li"},"recoverExcessStETH")," instead).")))),(0,o.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"_token")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"address")),(0,o.kt)("td",{parentName:"tr",align:null},"ERC20-compatible token address to recover")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"_amount")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"uint256")),(0,o.kt)("td",{parentName:"tr",align:null},"Amount to recover")))),(0,o.kt)("h3",{id:"function-recovererc721"},"Function: recoverERC721"),(0,o.kt)("p",null,"Transfers a given ERC721-compatible NFT (defined by the contract address) belonging to the burner contract address\nto the Lido treasury (the ",(0,o.kt)("inlineCode",{parentName:"p"},"DAO Agent"),") address."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sol"},"function recoverERC721(address _token, uint256 _tokenId) external\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Reverts if ",(0,o.kt)("inlineCode",{parentName:"p"},"_token")," address is 0 (zero)."))),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"_token")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"address")),(0,o.kt)("td",{parentName:"tr",align:null},"ERC721-compatible token address to recover")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"_tokenId")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"uint256")),(0,o.kt)("td",{parentName:"tr",align:null},"Token id to recover")))))}p.isMDXComponent=!0}}]);