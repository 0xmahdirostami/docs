"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8502],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,h=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return n?r.createElement(h,i(i({ref:t},d),{},{components:n})):r.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2930:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={},i="Burner",l={unversionedId:"contracts/burner",id:"contracts/burner",title:"Burner",description:"- Source Code",source:"@site/docs/contracts/burner.md",sourceDirName:"contracts",slug:"/contracts/burner",permalink:"/contracts/burner",editUrl:"https://github.com/lidofinance/docs/blob/main/docs/contracts/burner.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"DepositSecurityModule",permalink:"/contracts/deposit-security-module"},next:{title:"LidoExecutionLayerRewardsVault",permalink:"/contracts/lido-execution-layer-rewards-vault"}},s=[{value:"Shares burnt counters",id:"shares-burnt-counters",children:[],level:2},{value:"View methods",id:"view-methods",children:[{value:"Function: getCoverSharesBurnt",id:"function-getcoversharesburnt",children:[],level:3},{value:"Function: getNonCoverSharesBurnt",id:"function-getnoncoversharesburnt",children:[],level:3},{value:"function getExcessStETH",id:"function-getexcesssteth",children:[],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"Function: requestBurnMyStETHForCover",id:"function-requestburnmystethforcover",children:[{value:"Parameters:",id:"parameters",children:[],level:4}],level:3},{value:"Function: requestBurnMyStETH",id:"function-requestburnmysteth",children:[{value:"Parameters:",id:"parameters-1",children:[],level:4}],level:3},{value:"function recoverExcessStETH",id:"function-recoverexcesssteth",children:[],level:3},{value:"Function: recoverERC20",id:"function-recovererc20",children:[{value:"Parameters:",id:"parameters-2",children:[],level:4}],level:3},{value:"Function: recoverERC721",id:"function-recovererc721",children:[],level:3}],level:2}],c={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"burner"},"Burner"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/lidofinance/lido-dao/blob/master/contracts/0.8.9/Burner.sol"},"Source Code")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://etherscan.io/address/0xD15a672319Cf0352560eE76d9e89eAB0889046D3"},"Deployed Contract"))),(0,a.kt)("p",null,"The contract provides a way for Lido protocol to burn stETH token shares as a means to finalize withdrawals,\npenalize untimely exiting node operators, and, possibly, cover losses in staking."),(0,a.kt)("p",null,"It relies on the ",(0,a.kt)("a",{parentName:"p",href:"/contracts/lido#rebasing"},"rebasing")," nature of stETH. The ",(0,a.kt)("inlineCode",{parentName:"p"},"Lido")," contract calculates\nuser balance using the following equation:\n",(0,a.kt)("inlineCode",{parentName:"p"},"balanceOf(account) = shares[account] * totalPooledEther / totalShares"),".\nTherefore, burning shares (e.g. decreasing the ",(0,a.kt)("inlineCode",{parentName:"p"},"totalShares")," amount) increases stETH holders' balances."),(0,a.kt)("p",null,"It's presumed that actual shares burning happens inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"Lido")," contract as a part of the ",(0,a.kt)("inlineCode",{parentName:"p"},"AccountingOracleReport"),".\n",(0,a.kt)("inlineCode",{parentName:"p"},"Burner")," provides a safe and deterministic way to incur a positive stETH token rebase by gradually\ndecreasing ",(0,a.kt)("inlineCode",{parentName:"p"},"totalShares")," that can be correctly handled by 3rd party protocols integrated with stETH."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Burner")," accepts burning requests by the following two ways:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Locking pre-approved stETH tokens by the caller with an assigned role."),(0,a.kt)("li",{parentName:"ul"},"Locking caller-provided stETH tokens.")),(0,a.kt)("p",null,"Those burn requests are initially set by the contract to a pending state.\nActual burning happens as part of an oracle (",(0,a.kt)("inlineCode",{parentName:"p"},"AccountinOracle"),") report handling by ",(0,a.kt)("inlineCode",{parentName:"p"},"Lido")," to prevent\nadditional fluctuations of the existing stETH token rebase period (~24h)."),(0,a.kt)("p",null,"We also distinguish two types of shares burn requests:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"request to ",(0,a.kt)("strong",{parentName:"li"},"cover")," a slashing event (e.g. decreasing of the total pooled ETH amount\nbetween the two consecutive oracle reports);"),(0,a.kt)("li",{parentName:"ul"},"request to burn shares for any other cases (",(0,a.kt)("strong",{parentName:"li"},"non-cover"),").")),(0,a.kt)("p",null,"The contract has two separate counters for the burnt shares: cover and non-cover ones. The contract is\nexclusive responsible for the stETH shares burning via by ",(0,a.kt)("inlineCode",{parentName:"p"},"Lido")," and burning allowed only from the contract's\nown balance only."),(0,a.kt)("h2",{id:"shares-burnt-counters"},"Shares burnt counters"),(0,a.kt)("p",null,"The contract keeps count of all shares ever burned by way of maintaining two internal counters:\n",(0,a.kt)("inlineCode",{parentName:"p"},"totalCoverSharesBurnt")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"totalNonCoverSharesBurnt")," for cover and non-cover burns respectively.\nThese counters are increased when actual stETH burn is performed as part of the Lido Oracle report."),(0,a.kt)("p",null,"This makes it possible to split any stETH rebase into two sub-components: the rewards-induced rebase\nand cover application-induced rebase, which can be done as follows:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Before the rebase, store the previous values of both counters, as well as the value of stETH share price:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sol"},"prevCoverSharesBurnt = Burner.totalCoverSharesBurnt()\nprevSharePrice = stETH.totalSupply() / stETH.getTotalShares()\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"After the rebase, perform the following calculations:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sol"},"sharesBurntFromOldToNew = Burner.totalCoverSharesBurnt() - prevCoverSharesBurnt;\nnewSharePriceAfterCov = stETH.totalSupply() / (stETH.getTotalShares() + sharesBurntFromOldToNew);\nnewSharePrice = stETH.totalSupply() / stETH.getTotalShares();\n\n// rewards-induced share price increase\nrewardPerShare = newSharePriceAfterCov - prevSharePrice;\n\n// cover-induced share price increase\nnonRewardSharePriceIncrease = newSharePrice - prevSharePrice - rewardPerShare;\n")))),(0,a.kt)("h2",{id:"view-methods"},"View methods"),(0,a.kt)("h3",{id:"function-getcoversharesburnt"},"Function: getCoverSharesBurnt"),(0,a.kt)("p",null,"Returns the total cover shares ever burnt."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sol"},"function getCoverSharesBurnt() external view returns (uint256)\n")),(0,a.kt)("h3",{id:"function-getnoncoversharesburnt"},"Function: getNonCoverSharesBurnt"),(0,a.kt)("p",null,"Returns the total non-cover shares ever burnt."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sol"},"function getNonCoverSharesBurnt() external view returns (uint256)\n")),(0,a.kt)("h3",{id:"function-getexcesssteth"},"function getExcessStETH"),(0,a.kt)("p",null,"Returns the stETH amount belonging to the burner contract address but not marked for burning."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sol"},"function getExcessStETH() external view return (uint256)\n")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"function-requestburnmystethforcover"},"Function: requestBurnMyStETHForCover"),(0,a.kt)("p",null,"Transfers stETH tokens from the message sender and irreversibly locks these on the burner contract address.\nInternally converts tokens amount into underlying shares amount and marks the converted shares amount\nfor cover-backed burning by increasing the internal ",(0,a.kt)("inlineCode",{parentName:"p"},"coverSharesBurnRequested")," counter."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sol"},"function requestBurnMyStETHForCover(uint256 _stETH2Burn) external\n")),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Reverts if any of the following is true:"),(0,a.kt)("ul",{parentName:"div"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"msg.sender")," is not equal to the set upon construction ",(0,a.kt)("inlineCode",{parentName:"li"},"voting")," address;"),(0,a.kt)("li",{parentName:"ul"},"no stETH provided (",(0,a.kt)("inlineCode",{parentName:"li"},"_stETH2Burn == 0"),");"),(0,a.kt)("li",{parentName:"ul"},"no stETH transferred (allowance exceeded).")))),(0,a.kt)("h4",{id:"parameters"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"_stETH2Burn")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"uint256")),(0,a.kt)("td",{parentName:"tr",align:null},"stETH tokens amount (not shares amount) to burn")))),(0,a.kt)("h3",{id:"function-requestburnmysteth"},"Function: requestBurnMyStETH"),(0,a.kt)("p",null,"Transfers stETH tokens from the message sender and irreversibly locks these on the burner contract address.\nInternally converts tokens amount into underlying shares amount and marks the converted amount for\nnon-cover-backed burning by increasing the internal ",(0,a.kt)("inlineCode",{parentName:"p"},"nonCoverSharesBurnRequested")," counter."),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Reverts if any of the following is true:"),(0,a.kt)("ul",{parentName:"div"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"msg.sender")," is not equal to the set upon construction ",(0,a.kt)("inlineCode",{parentName:"li"},"voting")," address;"),(0,a.kt)("li",{parentName:"ul"},"no stETH provided (",(0,a.kt)("inlineCode",{parentName:"li"},"_stETH2Burn == 0"),");"),(0,a.kt)("li",{parentName:"ul"},"no stETH transferred (allowance exceeded).")))),(0,a.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"_stETH2Burn")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"uint256")),(0,a.kt)("td",{parentName:"tr",align:null},"stETH tokens amount (not shares amount) to burn")))),(0,a.kt)("h3",{id:"function-recoverexcesssteth"},"function recoverExcessStETH"),(0,a.kt)("p",null,"Transfers the excess stETH amount (e.g. belonging to the burner contract address but not marked for burning)\nto the Lido treasury address (the ",(0,a.kt)("inlineCode",{parentName:"p"},"DAO Agent")," contract) set upon the contract construction."),(0,a.kt)("p",null,"Does nothing if the ",(0,a.kt)("inlineCode",{parentName:"p"},"getExcessStETH")," view func returns 0 (zero), e.g. there is no excess stETH\non the contract's balance."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sol"},"function recoverExcessStETH() external\n")),(0,a.kt)("h3",{id:"function-recovererc20"},"Function: recoverERC20"),(0,a.kt)("p",null,"Transfers a given amount of an ERC20-token (defined by the provided contract address) belonging\nto the burner contract address to the Lido treasury (the ",(0,a.kt)("inlineCode",{parentName:"p"},"DAO Agent")," contract) address."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sol"},"function recoverERC20(address _token, uint256 _amount) external\n")),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Reverts if any of the following is true:"),(0,a.kt)("ul",{parentName:"div"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_amount")," value is 0 (zero);"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_token")," address is 0 (zero);"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"_token")," address is equal to the ",(0,a.kt)("inlineCode",{parentName:"li"},"stETH")," address (use ",(0,a.kt)("inlineCode",{parentName:"li"},"recoverExcessStETH")," instead).")))),(0,a.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"_token")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"address")),(0,a.kt)("td",{parentName:"tr",align:null},"ERC20-compatible token address to recover")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"_amount")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"uint256")),(0,a.kt)("td",{parentName:"tr",align:null},"Amount to recover")))),(0,a.kt)("h3",{id:"function-recovererc721"},"Function: recoverERC721"),(0,a.kt)("p",null,"Transfers a given ERC721-compatible NFT (defined by the contract address) belonging to the burner contract address\nto the Lido treasury (the ",(0,a.kt)("inlineCode",{parentName:"p"},"DAO Agent"),") address."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sol"},"function recoverERC721(address _token, uint256 _tokenId) external\n")),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Reverts if ",(0,a.kt)("inlineCode",{parentName:"p"},"_token")," address is 0 (zero)."))),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"_token")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"address")),(0,a.kt)("td",{parentName:"tr",align:null},"ERC721-compatible token address to recover")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"_tokenId")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"uint256")),(0,a.kt)("td",{parentName:"tr",align:null},"Token id to recover")))))}d.isMDXComponent=!0}}]);