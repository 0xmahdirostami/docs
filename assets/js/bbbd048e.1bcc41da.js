"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[276],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return c}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=p(a),c=r,k=u["".concat(d,".").concat(c)]||u[c]||m[c]||l;return a?n.createElement(k,i(i({ref:t},s),{},{components:a})):n.createElement(k,i({ref:t},s))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},941:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return s},default:function(){return u}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=["components"],o={},d="MevBoostRelayAllowedList",p={unversionedId:"contracts/mev-boost-relays-allowed-list",id:"contracts/mev-boost-relays-allowed-list",title:"MevBoostRelayAllowedList",description:"- Source Code",source:"@site/docs/contracts/mev-boost-relays-allowed-list.md",sourceDirName:"contracts",slug:"/contracts/mev-boost-relays-allowed-list",permalink:"/contracts/mev-boost-relays-allowed-list",editUrl:"https://github.com/lidofinance/docs/blob/main/docs/contracts/mev-boost-relays-allowed-list.md",tags:[],version:"current",frontMatter:{}},s=[{value:"View methods",id:"view-methods",children:[{value:"get_owner()",id:"get_owner",children:[],level:3},{value:"get_manager()",id:"get_manager",children:[],level:3},{value:"get_relays_amount()",id:"get_relays_amount",children:[],level:3},{value:"get_relays()",id:"get_relays",children:[],level:3},{value:"get_relay_by_uri()",id:"get_relay_by_uri",children:[{value:"Parameters:",id:"parameters",children:[],level:4}],level:3},{value:"remove_relay()",id:"remove_relay",children:[{value:"Parameters:",id:"parameters-2",children:[],level:4}],level:3},{value:"change_owner()",id:"change_owner",children:[{value:"Parameters:",id:"parameters-3",children:[],level:4}],level:3},{value:"set_manager()",id:"set_manager",children:[{value:"Parameters:",id:"parameters-4",children:[],level:4}],level:3},{value:"dismiss_manager()",id:"dismiss_manager",children:[],level:3},{value:"recover_erc20()",id:"recover_erc20",children:[],level:3}],level:2}],m={toc:s};function u(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"mevboostrelayallowedlist"},"MevBoostRelayAllowedList"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/lidofinance/mev-boost-relay-allowed-list/blob/main/contracts/MEVBoostRelayAllowedList.vy"},"Source Code")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://etherscan.io/address/0xf95f069f9ad107938f6ba802a3da87892298610e"},"Deployed Contract (mainnet)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://goerli.etherscan.io/address/0xeabe95ac5f3d64ae16acbb668ed0efcd81b721bc"},"Deployed Contract (goerli+prater)"))),(0,l.kt)("p",null,"MEV-Boost relay allowed list is a simple contract storing a list of relays that have been approved by DAO for use in ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/flashbots/mev-boost"},"MEV-Boost"),". The data from the contract are used to generate a configuration file that contains a list of relays that should be connected to."),(0,l.kt)("h2",{id:"view-methods"},"View methods"),(0,l.kt)("h3",{id:"get_owner"},"get_owner()"),(0,l.kt)("p",null,"Retrieves the current contract owner."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vyper"},"@view\n@external\ndef get_owner() -> address\n")),(0,l.kt)("h3",{id:"get_manager"},"get_manager()"),(0,l.kt)("p",null,"Retrieves the current manager entity (returns zero address if no entity is assigned)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vyper"},"@view\n@external\ndef get_manager() -> address\n")),(0,l.kt)("h3",{id:"get_relays_amount"},"get_relays_amount()"),(0,l.kt)("p",null,"Retrieves the current total amount of allowed relays."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vyper"},"@view\n@external\ndef get_relays_amount() -> uint256\n")),(0,l.kt)("h3",{id:"get_relays"},"get_relays()"),(0,l.kt)("p",null,"Retrieves all of the currently allowed relays."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vyper"},"@view\n@external\ndef get_relays() -> DynArray[Relay, MAX_NUM_RELAYS]\n")),(0,l.kt)("h3",{id:"get_relay_by_uri"},"get_relay_by_uri()"),(0,l.kt)("p",null,"Retrieves the relay with the provided uri."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vyper"},"@view\n@external\ndef get_relay_by_uri(relay_uri: String[MAX_STRING_LENGTH]) -> bool\n")),(0,l.kt)("h4",{id:"parameters"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"relay_uri")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"String[MAX_STRING_LENGTH]")),(0,l.kt)("td",{parentName:"tr",align:null},"URI of the relay")))),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Reverts if no relay found. :::")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("h3",{parentName:"div",id:"get_allowed_list_version"},"get_allowed_list_version()"),(0,l.kt)("p",{parentName:"div"},"Retrieves the current version of the allowed relays list."),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-vyper"},"@view\n@external\ndef get_allowed_list_version() -> uint256:\n")),(0,l.kt)("h2",{parentName:"div",id:"methods"},"Methods"),(0,l.kt)("h3",{parentName:"div",id:"add_relay"},"add_relay()"),(0,l.kt)("p",{parentName:"div"},"Appends relay to the allowed list. Bumps the allowed list version."),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-vyper"},"@external\ndef add_relay(\n    uri: String[MAX_STRING_LENGTH],\n    operator: String[MAX_STRING_LENGTH],\n    is_mandatory: bool,\n    description: String[MAX_STRING_LENGTH]\n)\n")),(0,l.kt)("h4",{parentName:"div",id:"parameters-1"},"Parameters:"),(0,l.kt)("table",{parentName:"div"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uri")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"String[MAX_STRING_LENGTH]")),(0,l.kt)("td",{parentName:"tr",align:null},"URI of the relay")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"operator")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"String[MAX_STRING_LENGTH]")),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the relay operator")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"is_mandatory")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"bool")),(0,l.kt)("td",{parentName:"tr",align:null},"If the relay is mandatory for usage for Lido Node Operator")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"description")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"String[MAX_STRING_LENGTH]")),(0,l.kt)("td",{parentName:"tr",align:null},"Description of the relay in free format")))))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"called by anyone except the owner or manager"),(0,l.kt)("li",{parentName:"ul"},"relay with provided ",(0,l.kt)("inlineCode",{parentName:"li"},"uri")," already allowed"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"uri")," is empty :::")),(0,l.kt)("h3",{id:"remove_relay"},"remove_relay()"),(0,l.kt)("p",null,"Removes the previously allowed relay from the set. Bumps the allowed list version."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vyper"},"@external\ndef remove_relay(uri: String[MAX_STRING_LENGTH]):\n")),(0,l.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uri")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"String[MAX_STRING_LENGTH]")),(0,l.kt)("td",{parentName:"tr",align:null},"URI of the relay")))),(0,l.kt)("p",null,"::: note Reverts if any of the following is true:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"called by anyone except the owner or manager"),(0,l.kt)("li",{parentName:"ul"},"if relay with provided ",(0,l.kt)("inlineCode",{parentName:"li"},"uri")," is not allowed"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"uri")," is empty :::")),(0,l.kt)("h3",{id:"change_owner"},"change_owner()"),(0,l.kt)("p",null,"Change current owner to the new one."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vyper"},"@external\ndef change_owner(owner: address)\n")),(0,l.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"owner")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"address")),(0,l.kt)("td",{parentName:"tr",align:null},"Address of the new owner")))),(0,l.kt)("p",null,"::: note Reverts if any of the following is true:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"called by anyone except the current owner"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"owner")," is the current owner"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"owner")," is zero address :::")),(0,l.kt)("h3",{id:"set_manager"},"set_manager()"),(0,l.kt)("p",null,"Sets ",(0,l.kt)("inlineCode",{parentName:"p"},"manager")," as the current management entity."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vyper"},"@external\ndef set_manager(manager: address)\n")),(0,l.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"manager"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"Address of the new manager")))),(0,l.kt)("p",null,"::: note Reverts if any of the following is true:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"called by anyone except the current owner"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"manager")," is equal to the previously set value"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"manager")," is zero address :::")),(0,l.kt)("h3",{id:"dismiss_manager"},"dismiss_manager()"),(0,l.kt)("p",null,"Dismisses the current management entity."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vyper"},"@external\ndef dismiss_manager()\n")),(0,l.kt)("p",null,"::: note Reverts if any of the following is true:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"called by anyone except the current owner"),(0,l.kt)("li",{parentName:"ul"},"no ",(0,l.kt)("inlineCode",{parentName:"li"},"manager")," was set previously :::")),(0,l.kt)("h3",{id:"recover_erc20"},"recover_erc20()"),(0,l.kt)("p",null,"Transfers ERC20 tokens from the contract's balance to the ",(0,l.kt)("inlineCode",{parentName:"p"},"recipient"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-vyper"},"@external\ndef recover_erc20(token: address, amount: uint256, recipient: address)\n")),(0,l.kt)("p",null,"::: note Reverts if any of the following is true:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"called by anyone except the owner"),(0,l.kt)("li",{parentName:"ul"},"ERC20 transfer reverted."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"recipient")," is zero address :::")))}u.isMDXComponent=!0}}]);