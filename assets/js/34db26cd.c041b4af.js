"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1975],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(a),u=r,h=m["".concat(s,".").concat(u)]||m[u]||c[u]||i;return a?n.createElement(h,l(l({ref:t},d),{},{components:a})):n.createElement(h,l({ref:t},d))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9661:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=a(3117),r=(a(7294),a(3905));const i={},l="EIP712StETH",o={unversionedId:"contracts/eip712-steth",id:"contracts/eip712-steth",title:"EIP712StETH",description:"- Source code",source:"@site/docs/contracts/eip712-steth.md",sourceDirName:"contracts",slug:"/contracts/eip712-steth",permalink:"/contracts/eip712-steth",draft:!1,editUrl:"https://github.com/lidofinance/docs/blob/main/docs/contracts/eip712-steth.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Lido",permalink:"/contracts/lido"},next:{title:"AccountingOracle",permalink:"/contracts/accounting-oracle"}},s={},p=[{value:"Why This Helper Is Needed",id:"why-this-helper-is-needed",level:2},{value:"View Methods",id:"view-methods",level:2},{value:"domainSeparatorV4()",id:"domainseparatorv4",level:3},{value:"hashTypedDataV4()",id:"hashtypeddatav4",level:3},{value:"Parameters",id:"parameters",level:4},{value:"eip712Domain()",id:"eip712domain",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"Useful External Links",id:"useful-external-links",level:2}],d={toc:p},m="wrapper";function c(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"eip712steth"},"EIP712StETH"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/lidofinance/lido-dao/blob/master/contracts/0.8.9/EIP712StETH.sol"},"Source code")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://etherscan.io/address/0x8F73e4C2A6D852bb4ab2A45E6a9CF5715b3228B7"},"Deployed contract"))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"EIP712StETH")," serves as a dedicated helper contract for ",(0,r.kt)("inlineCode",{parentName:"p"},"stETH"),", crucial for complete support of ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-2612"},"ERC-2612 compliant signed approvals"),"."),(0,r.kt)("h2",{id:"why-this-helper-is-needed"},"Why This Helper Is Needed"),(0,r.kt)("p",null,"The original ",(0,r.kt)("a",{parentName:"p",href:"/contracts/lido"},(0,r.kt)("inlineCode",{parentName:"a"},"Lido/StETH"))," contract is implemented in Solidity ",(0,r.kt)("inlineCode",{parentName:"p"},"0.4.24"),", while this helper is implemented in Solidity ",(0,r.kt)("inlineCode",{parentName:"p"},"0.8.9"),". The newer compiler version enables access to the current network's chain id via the globally available variable ",(0,r.kt)("a",{parentName:"p",href:"https://docs.soliditylang.org/en/v0.8.9/units-and-global-variables.html#block-and-transaction-properties"},(0,r.kt)("inlineCode",{parentName:"a"},"block.chainid")),". The chain id is mandatory for signature inclusion as per ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-155"},"EIP-155")," to prevent replay attacks, wherein an attacker intercepts a valid network transmission and then rebroadcasts it on another network fork. Consequently, ",(0,r.kt)("inlineCode",{parentName:"p"},"EIP-155")," compliance is critical for securing ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-2612"},(0,r.kt)("inlineCode",{parentName:"a"},"ERC-2612"))," signed approvals."),(0,r.kt)("h2",{id:"view-methods"},"View Methods"),(0,r.kt)("h3",{id:"domainseparatorv4"},"domainSeparatorV4()"),(0,r.kt)("p",null,"This method returns the ",(0,r.kt)("inlineCode",{parentName:"p"},"EIP712"),"-compatible hashed ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator"},"domain separator"),", which is valid for ",(0,r.kt)("inlineCode",{parentName:"p"},"stETH")," token permit signatures. The domain separator is essential in preventing a signature intended for one dApp from functioning in another (thereby averting a signature collision in a broader sense)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sol"},"function domainSeparatorV4(address _stETH) returns (bytes32)\n")),(0,r.kt)("p",null,"Also, consider the ",(0,r.kt)("a",{parentName:"p",href:"/contracts/eip712-steth#eip712domain"},(0,r.kt)("inlineCode",{parentName:"a"},"eip712Domain()"))," method that can construct a domain separator from ",(0,r.kt)("inlineCode",{parentName:"p"},"StETH"),"-specific fields on the client's side, such as within a dApp or a wallet. For instance, Metamask relies on ",(0,r.kt)("a",{parentName:"p",href:"https://docs.metamask.io/wallet/how-to/sign-data/#use-eth_signtypeddata_v4"},(0,r.kt)("inlineCode",{parentName:"a"},"eth_signTypedData_v4")),", which requires a non-hashed domain separator being provided."),(0,r.kt)("h3",{id:"hashtypeddatav4"},"hashTypedDataV4()"),(0,r.kt)("p",null,"This method returns the hash of a fully encoded ",(0,r.kt)("inlineCode",{parentName:"p"},"EIP712"),"-compatible message for this domain. The method can validate the input data against the provided ",(0,r.kt)("inlineCode",{parentName:"p"},"v, r, s")," secp256k1 components."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sol"},"function hashTypedDataV4(address _stETH, bytes32 _structHash) returns (bytes32)\n")),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_stETH")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the deployed ",(0,r.kt)("inlineCode",{parentName:"td"},"stETH")," token")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_structHash")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bytes32")),(0,r.kt)("td",{parentName:"tr",align:null},"Hash of the data structure")))),(0,r.kt)("p",null,"For a specific use case, see the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lidofinance/lido-dao/blob/master/contracts/0.4.24/StETHPermit.sol#L99-L112"},"StETHPermit.permit()")," implementation."),(0,r.kt)("h3",{id:"eip712domain"},"eip712Domain()"),(0,r.kt)("p",null,"This method returns the fields and values necessary to construct a domain separator on the client's side. The method resembles the one proposed in ",(0,r.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-5267"},"ERC-5267"),", with the only difference being that it doesn't return unused fields."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sol"},"function eip712Domain(address _stETH) returns (\n    string memory name,\n    string memory version,\n    uint256 chainId,\n    address verifyingContract\n)\n")),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"_stETH")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the deployed ",(0,r.kt)("inlineCode",{parentName:"td"},"stETH")," token")))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the token")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"version")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Version of the token")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"chainId")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint256")),(0,r.kt)("td",{parentName:"tr",align:null},"Chain identifier")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"verifyingContract")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the token contract")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Provided the correct ",(0,r.kt)("inlineCode",{parentName:"p"},"_stETH")," ",(0,r.kt)("a",{parentName:"p",href:"/deployed-contracts"},"deployed")," address, it returns:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},'("Liquid staked Ether 2.0", "2", 1, 0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84) for Mainnet.'),(0,r.kt)("li",{parentName:"ul"},'("Liquid staked Ether 2.0", "2", 5, 0x1643E812aE58766192Cf7D2Cf9567dF2C37e9B7F) for G\xf6rli.'))),(0,r.kt)("p",null,"This method facilitates domain separator construction on the client's side, such as in a wallet or widget:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function makeDomainSeparator(name, version, chainId, verifyingContract) {\n  return web3.utils.keccak256(\n    web3.eth.abi.encodeParameters(\n      ['bytes32', 'bytes32', 'bytes32', 'uint256', 'address'],\n      [\n        web3.utils.keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\n        web3.utils.keccak256(name),\n        web3.utils.keccak256(version),\n        chainId,\n        verifyingContract,\n      ]\n    )\n  )\n}\n")),(0,r.kt)("h2",{id:"useful-external-links"},"Useful External Links"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://medium.com/mycrypto/the-magic-of-digital-signatures-on-ethereum-98fe184dc9c7"},"The Magic of Digital Signatures on Ethereum")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://medium.com/frak-defi/erc-2612-the-ultimate-guide-to-gasless-erc-20-approvals-2cd32ddee534"},"ERC-2612: The Ultimate Guide to Gasless ERC-20 Approvals")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.metamask.io/wallet/how-to/sign-data/#use-eth_signtypeddata_v4"},"Metamask sign-data"))))}c.isMDXComponent=!0}}]);