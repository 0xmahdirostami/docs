"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[953],{3905:function(e,n,r){r.d(n,{Zo:function(){return c},kt:function(){return h}});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),p=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},c=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(r),h=a,m=d["".concat(s,".").concat(h)]||d[h]||u[h]||o;return r?t.createElement(m,i(i({ref:n},c),{},{components:r})):t.createElement(m,i({ref:n},c))}));function h(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9786:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var t=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],l={},s="Subgraph",p={unversionedId:"integrations/subgraph",id:"integrations/subgraph",title:"Subgraph",description:"Introduction",source:"@site/docs/integrations/subgraph.md",sourceDirName:"integrations",slug:"/integrations/subgraph",permalink:"/integrations/subgraph",editUrl:"https://github.com/lidofinance/docs/blob/main/docs/integrations/subgraph.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"SDKs",permalink:"/integrations/sdk"},next:{title:"Specification",permalink:"/integrations/aave/specification"}},c=[{value:"Introduction",id:"introduction",children:[],level:2},{value:"GraphQL Schema",id:"graphql-schema",children:[],level:2},{value:"Links",id:"links",children:[],level:2},{value:"Query Examples",id:"query-examples",children:[{value:"Rewards Distribution",id:"rewards-distribution",children:[],level:3},{value:"Oracle Reports",id:"oracle-reports",children:[],level:3},{value:"Transfers",id:"transfers",children:[],level:3},{value:"Submissions",id:"submissions",children:[],level:3},{value:"Node Operator Keys",id:"node-operator-keys",children:[],level:3}],level:2},{value:"Helpful Links",id:"helpful-links",children:[],level:2}],u={toc:c};function d(e){var n=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"subgraph"},"Subgraph"),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Lido has a Subgraph deployed on ",(0,o.kt)("a",{parentName:"p",href:"https://thegraph.com/docs/about/introduction#what-the-graph-is"},"The Graph Decentralized Network")," which indexes and organises data from the Lido smart contracts events, exposing a GraphQL endpoint for queries. Subgraph data is indexed and served by independent Indexers on the network."),(0,o.kt)("h2",{id:"graphql-schema"},"GraphQL Schema"),(0,o.kt)("p",null,"The schema of GraphQL entities available is defined in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/lidofinance/lido-subgraph/blob/master/schema.graphql"},(0,o.kt)("inlineCode",{parentName:"a"},"/schema.graphql")," "),"."),(0,o.kt)("h2",{id:"links"},"Links"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://thegraph.com/explorer/subgraph?id=HXfMc1jPHfFQoccWd7VMv66km75FoxVHDMvsJj5vG5vf&view=Overview"},"Explorer Page")),(0,o.kt)("li",{parentName:"ul"},"GraphQL Endpoint: ",(0,o.kt)("inlineCode",{parentName:"li"},"https://gateway.thegraph.com/api/[api-key]/subgraphs/id/HXfMc1jPHfFQoccWd7VMv66km75FoxVHDMvsJj5vG5vf")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/lidofinance/lido-subgraph/"},"Code Repo"))),(0,o.kt)("h2",{id:"query-examples"},"Query Examples"),(0,o.kt)("p",null,"Below are some sample queries you can use to gather information from the Lido contracts."),(0,o.kt)("p",null,"You can build your own queries using ",(0,o.kt)("a",{parentName:"p",href:"https://graphiql-online.com"},"GraphQL Explorer")," to test it out and query exactly what you need."),(0,o.kt)("h3",{id:"rewards-distribution"},"Rewards Distribution"),(0,o.kt)("p",null,"Daily staking rewards data with calculated APR and fees distribution."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"{\n  totalRewards(first: 100, orderBy: block, orderDirection: desc) {\n    id\n    totalRewards\n    totalRewardsWithFees\n    insuranceFee\n    treasuryFee\n    totalFee\n    dust\n    nodeOperatorFees {\n      address\n      fee\n    }\n    nodeOperatorsShares {\n      address\n      shares\n    }\n    shares2mint\n    sharesToInsuranceFund\n    sharesToOperators\n    sharesToTreasury\n    totalPooledEtherBefore\n    totalPooledEtherAfter\n    totalSharesBefore\n    totalSharesAfter\n    apr\n    aprBeforeFees\n    aprRaw\n    preTotalPooledEther\n    postTotalPooledEther\n    timeElapsed\n    block\n    blockTime\n    transactionIndex\n  }\n}\n")),(0,o.kt)("h3",{id:"oracle-reports"},"Oracle Reports"),(0,o.kt)("p",null,"Daily completed oracle reports."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"{\n  oracleCompleteds(first: 500, orderBy: blockTime, orderDirection: desc) {\n    epochId\n    beaconBalance\n    beaconValidators\n    block\n    blockTime\n  }\n}\n")),(0,o.kt)("h3",{id:"transfers"},"Transfers"),(0,o.kt)("p",null,"stETH transfers between addresses."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"{\n  lidoTransfers(first: 50) {\n    from\n    to\n    value\n    block\n    blockTime\n    transactionHash\n  }\n}\n")),(0,o.kt)("h3",{id:"submissions"},"Submissions"),(0,o.kt)("p",null,"stETH staking events."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"{\n  lidoSubmissions(first: 50) {\n    sender\n    amount\n    block\n    blockTime\n    transactionHash\n  }\n}\n")),(0,o.kt)("h3",{id:"node-operator-keys"},"Node Operator Keys"),(0,o.kt)("p",null,"Fetch validator keys of a node operator."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"{\n  nodeOperatorSigningKeys(where: { operatorId: 0 }) {\n    pubkey\n  }\n}\n")),(0,o.kt)("h2",{id:"helpful-links"},"Helpful Links"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=UrfIpm-Vlgs"},"Creating an API Key Video Tutorial")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://thegraph.com/docs/en/studio/managing-api-keys/"},"Managing your API Key & Setting your indexer preferences")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://thegraph.com/docs/en/developer/querying-from-your-app/"},"Querying from an Application")))}d.isMDXComponent=!0}}]);