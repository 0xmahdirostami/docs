"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8276],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=p(a),k=r,c=m["".concat(d,".").concat(k)]||m[k]||u[k]||l;return a?n.createElement(c,i(i({ref:t},s),{},{components:a})):n.createElement(c,i({ref:t},s))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=k;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[m]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},2614:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(3117),r=(a(7294),a(3905));const l={},i="MevBoostRelayAllowedList",o={unversionedId:"contracts/mev-boost-relays-allowed-list",id:"contracts/mev-boost-relays-allowed-list",title:"MevBoostRelayAllowedList",description:"- Source Code",source:"@site/docs/contracts/mev-boost-relays-allowed-list.md",sourceDirName:"contracts",slug:"/contracts/mev-boost-relays-allowed-list",permalink:"/contracts/mev-boost-relays-allowed-list",draft:!1,editUrl:"https://github.com/lidofinance/docs/blob/main/docs/contracts/mev-boost-relays-allowed-list.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"LidoExecutionLayerRewardsVault",permalink:"/contracts/lido-execution-layer-rewards-vault"},next:{title:"TRP VestingEscrow",permalink:"/contracts/trp-vesting-escrow"}},d={},p=[{value:"View methods",id:"view-methods",level:2},{value:"get_owner()",id:"get_owner",level:3},{value:"get_manager()",id:"get_manager",level:3},{value:"get_relays_amount()",id:"get_relays_amount",level:3},{value:"get_relays()",id:"get_relays",level:3},{value:"get_relay_by_uri()",id:"get_relay_by_uri",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"get_allowed_list_version()",id:"get_allowed_list_version",level:3},{value:"Methods",id:"methods",level:2},{value:"add_relay()",id:"add_relay",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"remove_relay()",id:"remove_relay",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"change_owner()",id:"change_owner",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"set_manager()",id:"set_manager",level:3},{value:"Parameters:",id:"parameters-4",level:4},{value:"dismiss_manager()",id:"dismiss_manager",level:3},{value:"recover_erc20()",id:"recover_erc20",level:3}],s={toc:p},m="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mevboostrelayallowedlist"},"MevBoostRelayAllowedList"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/lidofinance/mev-boost-relay-allowed-list/blob/main/contracts/MEVBoostRelayAllowedList.vy"},"Source Code")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://etherscan.io/address/0xf95f069f9ad107938f6ba802a3da87892298610e"},"Deployed Contract (mainnet)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://goerli.etherscan.io/address/0xeabe95ac5f3d64ae16acbb668ed0efcd81b721bc"},"Deployed Contract (goerli+prater)"))),(0,r.kt)("p",null,"MEV-Boost relay allowed list is a simple contract storing a list of relays that have been approved by DAO for use in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/flashbots/mev-boost"},"MEV-Boost")," setups. The data from the contract is used to generate a configuration file that contains a list of relays that should be connected to by the Node Operators participating in Lido."),(0,r.kt)("h2",{id:"view-methods"},"View methods"),(0,r.kt)("h3",{id:"get_owner"},"get_owner()"),(0,r.kt)("p",null,"Retrieves the current contract owner."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vyper"},"@view\n@external\ndef get_owner() -> address\n")),(0,r.kt)("h3",{id:"get_manager"},"get_manager()"),(0,r.kt)("p",null,"Retrieves the current manager entity (returns zero address if no entity is assigned)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vyper"},"@view\n@external\ndef get_manager() -> address\n")),(0,r.kt)("h3",{id:"get_relays_amount"},"get_relays_amount()"),(0,r.kt)("p",null,"Retrieves the current total amount of allowed relays."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vyper"},"@view\n@external\ndef get_relays_amount() -> uint256\n")),(0,r.kt)("h3",{id:"get_relays"},"get_relays()"),(0,r.kt)("p",null,"Retrieves all of the currently allowed relays."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vyper"},"@view\n@external\ndef get_relays() -> DynArray[Relay, MAX_NUM_RELAYS]\n")),(0,r.kt)("h3",{id:"get_relay_by_uri"},"get_relay_by_uri()"),(0,r.kt)("p",null,"Retrieves the relay with the provided uri."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vyper"},"@view\n@external\ndef get_relay_by_uri(relay_uri: String[MAX_STRING_LENGTH]) -> bool\n")),(0,r.kt)("h4",{id:"parameters"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"relay_uri")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String[MAX_STRING_LENGTH]")),(0,r.kt)("td",{parentName:"tr",align:null},"URI of the relay")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Reverts if no relay found.")),(0,r.kt)("h3",{id:"get_allowed_list_version"},"get_allowed_list_version()"),(0,r.kt)("p",null,"Retrieves the current version of the allowed relays list."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vyper"},"@view\n@external\ndef get_allowed_list_version() -> uint256:\n")),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"add_relay"},"add_relay()"),(0,r.kt)("p",null,"Appends relay to the allowed list.\nBumps the allowed list version."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vyper"},"@external\ndef add_relay(\n    uri: String[MAX_STRING_LENGTH],\n    operator: String[MAX_STRING_LENGTH],\n    is_mandatory: bool,\n    description: String[MAX_STRING_LENGTH]\n)\n")),(0,r.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uri")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String[MAX_STRING_LENGTH]")),(0,r.kt)("td",{parentName:"tr",align:null},"URI of the relay")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"operator")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String[MAX_STRING_LENGTH]")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the relay operator")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"is_mandatory")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bool")),(0,r.kt)("td",{parentName:"tr",align:null},"If the relay is mandatory for usage for Lido Node Operator")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"description")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String[MAX_STRING_LENGTH]")),(0,r.kt)("td",{parentName:"tr",align:null},"Description of the relay in free format")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Reverts if any of the following is true:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"called by anyone except the owner or manager"),(0,r.kt)("li",{parentName:"ul"},"relay with provided ",(0,r.kt)("inlineCode",{parentName:"li"},"uri")," already allowed"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"uri")," is empty"))),(0,r.kt)("h3",{id:"remove_relay"},"remove_relay()"),(0,r.kt)("p",null,"Removes the previously allowed relay from the set.\nBumps the allowed list version."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vyper"},"@external\ndef remove_relay(uri: String[MAX_STRING_LENGTH]):\n")),(0,r.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uri")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"String[MAX_STRING_LENGTH]")),(0,r.kt)("td",{parentName:"tr",align:null},"URI of the relay")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Reverts if any of the following is true:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"called by anyone except the owner or manager"),(0,r.kt)("li",{parentName:"ul"},"if relay with provided ",(0,r.kt)("inlineCode",{parentName:"li"},"uri")," is not allowed"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"uri")," is empty"))),(0,r.kt)("h3",{id:"change_owner"},"change_owner()"),(0,r.kt)("p",null,"Change current owner to the new one."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vyper"},"@external\ndef change_owner(owner: address)\n")),(0,r.kt)("h4",{id:"parameters-3"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"owner")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the new owner")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Reverts if any of the following is true:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"called by anyone except the current owner"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"owner")," is the current owner"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"owner")," is zero address"))),(0,r.kt)("h3",{id:"set_manager"},"set_manager()"),(0,r.kt)("p",null,"Sets ",(0,r.kt)("inlineCode",{parentName:"p"},"manager")," as the current management entity."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vyper"},"@external\ndef set_manager(manager: address)\n")),(0,r.kt)("h4",{id:"parameters-4"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"manager"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Address of the new manager")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Reverts if any of the following is true:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"called by anyone except the current owner"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"manager")," is equal to the previously set value"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"manager")," is zero address"))),(0,r.kt)("h3",{id:"dismiss_manager"},"dismiss_manager()"),(0,r.kt)("p",null,"Dismisses the current management entity."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vyper"},"@external\ndef dismiss_manager()\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Reverts if any of the following is true:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"called by anyone except the current owner"),(0,r.kt)("li",{parentName:"ul"},"no ",(0,r.kt)("inlineCode",{parentName:"li"},"manager")," was set previously"))),(0,r.kt)("h3",{id:"recover_erc20"},"recover_erc20()"),(0,r.kt)("p",null,"Transfers ERC20 tokens from the contract's balance to the ",(0,r.kt)("inlineCode",{parentName:"p"},"recipient"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-vyper"},"@external\ndef recover_erc20(token: address, amount: uint256, recipient: address)\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Reverts if any of the following is true:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"called by anyone except the owner"),(0,r.kt)("li",{parentName:"ul"},"ERC20 transfer reverted"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"recipient")," is zero address"))))}u.isMDXComponent=!0}}]);